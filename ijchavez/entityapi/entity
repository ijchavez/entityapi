{
  "openapi" : "3.0.2",
  "info" : {
    "version" : "1.0",
    "title" : "Entity API",
    "description" : "Specificacton for API Entity",
    "termsOfService" : "www.example.com/terms",
    "contact" : {
      "name" : "Gerardo Chavez",
      "url" : "www.instagram.com/ijchavez",
      "email" : "info.gerardo.chavez@gmail.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers" : [ {
    "url" : "https://virtserver.swaggerhub.com/chavezgerardo/bussiness/1.0",
    "description" : "SwaggerHub Api Auto Mocking"
  } ],
  "paths" : {
    "/v1/entity" : {
      "get" : {
        "summary" : "Entity",
        "description" : "Get a list of entities in the system",
        "tags" : [ "Entity" ],
        "operationId" : "listEntitiesV1",
        "parameters" : [ {
          "$ref" : "#/components/parameters/PageNumberParam"
        }, {
          "$ref" : "#/components/parameters/PageSizeParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of Entities",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityPagedList"
                }
              }
            }
          }
        },
        "security" : [ ]
      },
      "post" : {
        "summary" : "New Entity",
        "description" : "Create a new Entity",
        "tags" : [ "Entity" ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Entity"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Entity Created",
            "headers" : {
              "Location" : {
                "description" : "Location of the created entity",
                "schema" : {
                  "type" : "string",
                  "format" : "url",
                  "example" : "http://example.com/v1/entity/{assignedIdValue}"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "409" : {
            "description" : "Confilct"
          }
        }
      }
    },
    "/v1/Entity/{EntityId}" : {
      "get" : {
        "summary" : "Get customer by Id",
        "description" : "Get a single **entity** by its *Id value*.",
        "tags" : [ "Entity" ],
        "operationId" : "getentityByIdV1",
        "parameters" : [ {
          "$ref" : "#/components/parameters/EntityIdPathParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Found Entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Entity"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ ]
      },
      "put" : {
        "summary" : "Update Entity",
        "description" : "Update Entity by Id",
        "tags" : [ "Entity" ],
        "operationId" : "UpdateEntityByIdV1",
        "parameters" : [ {
          "$ref" : "#/components/parameters/EntityIdPathParam"
        } ],
        "requestBody" : {
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Entity"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Entity Updated"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "409" : {
            "description" : "Conflict"
          }
        }
      },
      "delete" : {
        "summary" : "Delete Entity by Id",
        "description" : "Delete a single Entity by its Id value",
        "tags" : [ "Entity" ],
        "operationId" : "deleteEntityByIdV1",
        "parameters" : [ {
          "$ref" : "#/components/parameters/EntityIdPathParam"
        } ],
        "responses" : {
          "200" : {
            "description" : "Entity Delete"
          },
          "404" : {
            "description" : "Not Found"
          }
        }
      }
    }
  },
  "security" : [ {
    "BasicAuth" : [ ]
  }, {
    "JwtAuthToken" : [ ]
  } ],
  "components" : {
    "securitySchemes" : {
      "BasicAuth" : {
        "type" : "http",
        "scheme" : "basic"
      },
      "JwtAuthToken" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    },
    "schemas" : {
      "Address" : {
        "type" : "object",
        "properties" : {
          "line1" : {
            "type" : "string",
            "example" : "1031 Lima Av"
          },
          "city" : {
            "type" : "string",
            "example" : "Constituci√≥n"
          },
          "stateCode" : {
            "type" : "string",
            "minLength" : 2,
            "maxLength" : 2,
            "description" : "2 Letter State Code",
            "enum" : [ "BA", "LP", "CB", "JU", "DF" ]
          },
          "zipCode" : {
            "type" : "string",
            "example" : "AAU1073"
          }
        }
      },
      "Entity" : {
        "type" : "object",
        "description" : "Entity Object",
        "properties" : {
          "id" : {
            "type" : "string",
            "format" : "uuid",
            "readOnly" : true
          },
          "entityType" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 1,
            "example" : "C",
            "enum" : [ "C", "P" ]
          },
          "firstName" : {
            "type" : "string",
            "minLength" : 2,
            "maxLength" : 100,
            "example" : "Gerardo"
          },
          "lastName" : {
            "type" : "string",
            "minLength" : 2,
            "maxLength" : 100,
            "example" : "Chavez"
          },
          "address" : {
            "$ref" : "#/components/schemas/Address"
          }
        }
      },
      "EntityList" : {
        "type" : "array",
        "minItems" : 1,
        "maxItems" : 100,
        "description" : "List of Customers",
        "items" : {
          "$ref" : "#/components/schemas/Entity"
        }
      },
      "PagedResponse" : {
        "type" : "object",
        "properties" : {
          "pageable" : {
            "$ref" : "#/components/schemas/PagedResponse_pageable"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "last" : {
            "type" : "boolean"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "size" : {
            "type" : "integer",
            "format" : "int32"
          },
          "number" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "sort" : {
            "$ref" : "#/components/schemas/PagedResponse_pageable_sort"
          },
          "first" : {
            "type" : "boolean"
          }
        }
      },
      "PagedResponse_pageable_sort" : {
        "type" : "object",
        "properties" : {
          "sorted" : {
            "type" : "boolean"
          },
          "unsorted" : {
            "type" : "boolean"
          }
        }
      },
      "PagedResponse_pageable" : {
        "type" : "object",
        "properties" : {
          "sort" : {
            "$ref" : "#/components/schemas/PagedResponse_pageable_sort"
          },
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "paged" : {
            "type" : "boolean"
          },
          "unpaged" : {
            "type" : "boolean"
          }
        }
      },
      "EntityPagedList" : {
        "type" : "object",
        "allOf" : [ {
          "$ref" : "#/components/schemas/PagedResponse"
        } ],
        "properties" : {
          "content" : {
            "$ref" : "#/components/schemas/EntityList"
          }
        }
      },
      "OrderId" : {
        "type" : "object",
        "properties" : {
          "orderId" : {
            "type" : "string",
            "format" : "uuid"
          },
          "orderStatus" : {
            "type" : "string"
          }
        }
      }
    },
    "parameters" : {
      "PageNumberParam" : {
        "name" : "pageNumber",
        "in" : "query",
        "description" : "Page Number",
        "schema" : {
          "type" : "integer",
          "format" : "int32",
          "default" : 1
        }
      },
      "PageSizeParam" : {
        "name" : "pageSize",
        "in" : "query",
        "description" : "Page Size",
        "required" : false,
        "schema" : {
          "type" : "integer",
          "format" : "int32",
          "default" : 25
        }
      },
      "EntityIdPathParam" : {
        "name" : "EntityId",
        "in" : "path",
        "description" : "Entity Id",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "format" : "uuid"
        }
      }
    }
  }
}